FROM python:3.8-slim-buster

ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root
ENV LC_ALL C.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV PATH /data/testflinger/server:$PATH
ENV TESTFLINGER_CONFIG=/data/testflinger/server/testflinger.conf

RUN echo "RUNNING tf-api dockerfile"

# install deps & cleanup
RUN apt-get update \
  && apt-get install -y \
    --no-install-recommends \
    curl \
    git \
    procps \
    wget \
    python3 \
    python3-dev \
    python3-pip \
    python3-requests \
    python3-click 

# clean up APT
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# link python3 bin
RUN ln -s /usr/bin/python3 /usr/bin/python

RUN useradd -ms /bin/bash ubuntu

# facilitate logging
RUN mkdir -p /var/log/testflinger \
  && chmod 755 /var/log/testflinger

# clone src in volume dir
WORKDIR /data/testflinger/server
RUN git init \
  && git remote add origin https://github.com/canonical/testflinger.git \
  && git fetch origin \
  && git checkout -b main --track origin/main
  #&& git checkout c1a1d6ab6de04dca3fcfd8fac3db962f0c35272e

# Remove gunicorn from install scripts
# RUN sed -i '22 s/^/#/' ./setup.py

# install gunicorn threading deps
RUN pip install gevent packaging
RUN pip install -Iv urllib3==1.26.15

# run setup
# RUN ./setup.py install
RUN echo && echo "Running testflinger-api setup:" \
  && echo "Updating pip from $(pip3 --version)" \
  && pip3 install -U pip \
  && hash -r \
  && echo "New pip version: $(pip3 --version)" \
  && echo "Attempting build/install of testflinger api" \
  && pip install -I .

# copy tf config files
COPY ./code/testflinger.conf /data/testflinger/server

# adjust perms on src files
RUN chown -R ubuntu:ubuntu /data/testflinger
